services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass2postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./create_database.sql:/docker-entrypoint-initdb.d/init.sql
    # ports:
      # - "5432:5432"
    networks:
      - network
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mail.com
      PGADMIN_DEFAULT_PASSWORD: pass2admin
      PGADMIN_LISTEN_PORT: 80
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  backend:
    container_name: backend
    build: ./backend
    environment:
      DATABASE_NAME: API
      DATABASE_USER: API
      DATABASE_PASS: 1793
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: 5432
    # ports:
      # - "8002:8002"
    networks:
      - network
    depends_on:
      - postgres

  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "3000:3000"
    networks:
      - network
    depends_on:
      - backend

networks:
  network:
    driver: bridge

volumes:
  postgres:
  pgadmin:
